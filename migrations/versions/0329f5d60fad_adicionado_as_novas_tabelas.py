"""Adicionado as novas tabelas

Revision ID: 0329f5d60fad
Revises: 
Create Date: 2020-11-01 18:14:01.176322

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0329f5d60fad'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blacklist_tokens',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('token', sa.String(length=500), nullable=False),
    sa.Column('blacklisted_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('payment_conditions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('typePayment', sa.String(length=64), nullable=False),
    sa.Column('qtd', sa.Integer(), nullable=True),
    sa.Column('dayPayment', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_entries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_product', sa.Integer(), nullable=False),
    sa.Column('qtd', sa.Integer(), nullable=False),
    sa.Column('value_unity', sa.Integer(), nullable=False),
    sa.Column('issuing_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_outs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_product', sa.Integer(), nullable=False),
    sa.Column('qtd', sa.Integer(), nullable=False),
    sa.Column('value_unity', sa.Integer(), nullable=False),
    sa.Column('issuing_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('providers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('cnpj', sa.String(length=14), nullable=False),
    sa.Column('contato', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=80), nullable=False),
    sa.Column('telefone', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cnpj'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('name')
    )
    op.create_table('stocks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_product', sa.Integer(), nullable=False),
    sa.Column('qtd', sa.Integer(), nullable=False),
    sa.Column('value_unity', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('type_units',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('typeunit', sa.String(length=5), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('typeunit')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('password_hash', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('public_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('products',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=False),
    sa.Column('fabricante', sa.String(length=80), nullable=True),
    sa.Column('setor', sa.String(length=80), nullable=True),
    sa.Column('medida', sa.String(length=80), nullable=True),
    sa.Column('type_units_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['type_units_id'], ['type_units.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('provider_id', sa.Integer(), nullable=True),
    sa.Column('payment_conditions_id', sa.Integer(), nullable=True),
    sa.Column('qtd', sa.Integer(), nullable=False),
    sa.Column('issuance_date', sa.DateTime(), nullable=False),
    sa.Column('expected_date', sa.DateTime(), nullable=False),
    sa.Column('issuing_date', sa.DateTime(), nullable=False),
    sa.Column('devolution', sa.Boolean(), nullable=False),
    sa.Column('value_total', sa.Integer(), nullable=False),
    sa.Column('percentage_value', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['payment_conditions_id'], ['payment_conditions.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('orders')
    op.drop_table('products')
    op.drop_table('user')
    op.drop_table('type_units')
    op.drop_table('stocks')
    op.drop_table('providers')
    op.drop_table('product_outs')
    op.drop_table('product_entries')
    op.drop_table('payment_conditions')
    op.drop_table('blacklist_tokens')
    # ### end Alembic commands ###
